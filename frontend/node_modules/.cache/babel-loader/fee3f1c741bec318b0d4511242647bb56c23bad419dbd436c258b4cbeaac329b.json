{"ast":null,"code":"var _jsxFileName = \"C:\\\\SEMESTER 6\\\\5 - Software Quality Engineering\\\\SQE Project Code\\\\frontend\\\\src\\\\components\\\\account.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Account = () => {\n  _s();\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const userId = localStorage.getItem(\"userId\");\n\n  // Function to update the username\n  const handleUsernameChange = async () => {\n    if (newUsername) {\n      try {\n        const response = await fetch(\"http://localhost:5003/update-username\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: newUsername,\n            // Include the user ID if needed\n            user_id: userId // Example user ID, replace with actual user ID\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setMessage(`Username updated to: ${newUsername}`);\n          localStorage.setItem(\"username\", `${newUsername}`); // where userId is the value you want to store\n        } else {\n          setMessage(data.message || \"Error updating username.\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        setMessage(\"Error updating username.\");\n      }\n    } else {\n      setMessage(\"Please enter a new username.\");\n    }\n  };\n\n  // Function to update the password\n  const handlePasswordChange = async () => {\n    if (newPassword) {\n      try {\n        const response = await fetch(\"http:localhost:5003/update-password\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            password: newPassword,\n            user_id: userId // Example user ID, replace with actual user ID\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setMessage(\"Password updated successfully!\");\n        } else {\n          setMessage(data.message || \"Error updating password.\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        setMessage(\"Error updating password.\");\n      }\n    } else {\n      setMessage(\"Please enter a new password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Change Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter new username\",\n          value: newUsername,\n          onChange: e => setNewUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUsernameChange,\n          children: \"Update Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePasswordChange,\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Account, \"yXbEjHEYHISo6vCkgwXjiisdCLo=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Account","_s","newUsername","setNewUsername","newPassword","setNewPassword","message","setMessage","userId","localStorage","getItem","handleUsernameChange","response","fetch","method","headers","body","JSON","stringify","username","user_id","data","json","ok","setItem","error","console","handlePasswordChange","password","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/SEMESTER 6/5 - Software Quality Engineering/SQE Project Code/frontend/src/components/account.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Account = () => {\r\n  const [newUsername, setNewUsername] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  // Function to update the username\r\n  const handleUsernameChange = async () => {\r\n    if (newUsername) {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:5003/update-username\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              username: newUsername,\r\n              // Include the user ID if needed\r\n              user_id: userId, // Example user ID, replace with actual user ID\r\n            }),\r\n          },\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          setMessage(`Username updated to: ${newUsername}`);\r\n          localStorage.setItem(\"username\", `${newUsername}`); // where userId is the value you want to store\r\n        } else {\r\n          setMessage(data.message || \"Error updating username.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        setMessage(\"Error updating username.\");\r\n      }\r\n    } else {\r\n      setMessage(\"Please enter a new username.\");\r\n    }\r\n  };\r\n\r\n  // Function to update the password\r\n  const handlePasswordChange = async () => {\r\n    if (newPassword) {\r\n      try {\r\n        const response = await fetch(\r\n          \"http:localhost:5003/update-password\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              password: newPassword,\r\n              user_id: userId, // Example user ID, replace with actual user ID\r\n            }),\r\n          },\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          setMessage(\"Password updated successfully!\");\r\n        } else {\r\n          setMessage(data.message || \"Error updating password.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        setMessage(\"Error updating password.\");\r\n      }\r\n    } else {\r\n      setMessage(\"Please enter a new password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Manage Account</h1>\r\n      <div className=\"account-section\">\r\n        <div className=\"input-group\">\r\n          <label>Change Username</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter new username\"\r\n            value={newUsername}\r\n            onChange={(e) => setNewUsername(e.target.value)}\r\n          />\r\n          <button onClick={handleUsernameChange}>Update Username</button>\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label>Change Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <button onClick={handlePasswordChange}>Update Password</button>\r\n        </div>\r\n\r\n        {message && <p className=\"message\">{message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;;EAE7C;EACA,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAIT,WAAW,EAAE;MACf,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uCAAuC,EACvC;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,QAAQ,EAAEjB,WAAW;YACrB;YACAkB,OAAO,EAAEZ,MAAM,CAAE;UACnB,CAAC;QACH,CACF,CAAC;QAED,MAAMa,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAElC,IAAIV,QAAQ,CAACW,EAAE,EAAE;UACfhB,UAAU,CAAC,wBAAwBL,WAAW,EAAE,CAAC;UACjDO,YAAY,CAACe,OAAO,CAAC,UAAU,EAAE,GAAGtB,WAAW,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,MAAM;UACLK,UAAU,CAACc,IAAI,CAACf,OAAO,IAAI,0BAA0B,CAAC;QACxD;MACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BlB,UAAU,CAAC,0BAA0B,CAAC;MACxC;IACF,CAAC,MAAM;MACLA,UAAU,CAAC,8BAA8B,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMoB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAIvB,WAAW,EAAE;MACf,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qCAAqC,EACrC;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBU,QAAQ,EAAExB,WAAW;YACrBgB,OAAO,EAAEZ,MAAM,CAAE;UACnB,CAAC;QACH,CACF,CAAC;QAED,MAAMa,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAElC,IAAIV,QAAQ,CAACW,EAAE,EAAE;UACfhB,UAAU,CAAC,gCAAgC,CAAC;QAC9C,CAAC,MAAM;UACLA,UAAU,CAACc,IAAI,CAACf,OAAO,IAAI,0BAA0B,CAAC;QACxD;MACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BlB,UAAU,CAAC,0BAA0B,CAAC;MACxC;IACF,CAAC,MAAM;MACLA,UAAU,CAAC,8BAA8B,CAAC;IAC5C;EACF,CAAC;EAED,oBACER,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlC,OAAA;MAAKmC,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC9B9B,OAAA;QAAKmC,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAC1B9B,OAAA;UAAA8B,QAAA,EAAO;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BlC,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAEnC,WAAY;UACnBoC,QAAQ,EAAGC,CAAC,IAAKpC,cAAc,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACFlC,OAAA;UAAQ0C,OAAO,EAAE9B,oBAAqB;UAAAkB,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eAENlC,OAAA;QAAKmC,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAC1B9B,OAAA;UAAA8B,QAAA,EAAO;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BlC,OAAA;UACEoC,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAEjC,WAAY;UACnBkC,QAAQ,EAAGC,CAAC,IAAKlC,cAAc,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACFlC,OAAA;UAAQ0C,OAAO,EAAEd,oBAAqB;UAAAE,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,EAEL3B,OAAO,iBAAIP,OAAA;QAAGmC,SAAS,EAAC,SAAS;QAAAL,QAAA,EAAEvB;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CA1GID,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AA4Gb,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}