{"ast":null,"code":"var _jsxFileName = \"C:\\\\SEMESTER 6\\\\Project\\\\Cloud\\\\frontend\\\\src\\\\components\\\\photos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../styles/photos.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Photos = () => {\n  _s();\n  const [photos, setPhotos] = useState([]); // Store all photo details\n  const [file, setFile] = useState(null); // Store file for photo upload\n  const [fileName, setFileName] = useState(\"\"); // Store the name of the selected file\n  const [responseMessage, setResponseMessage] = useState(null); // Store response messages for UI\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n  const navigate = useNavigate(); // For navigation\n\n  const userId = localStorage.getItem(\"userId\");\n\n  // Fetch all photos (names and details) on component mount\n  useEffect(() => {\n    const fetchPhotos = async () => {\n      try {\n        const response = await fetch(`https://get-photos-74952627446.us-central1.run.app/photos/${userId}`);\n        const data = await response.json();\n        console.log(\"Data: \", data);\n        if (response.ok) {\n          setPhotos(data.photos || []); // Save all photo details in state\n        } else {\n          console.error(\"Error fetching photos:\", data.message);\n          setResponseMessage({\n            type: \"error\",\n            text: \"No photos available.\"\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching photos:\", error);\n        setResponseMessage({\n          type: \"error\",\n          text: \"Error fetching photos.\"\n        });\n      }\n    };\n    fetchPhotos();\n  }, []);\n\n  // Handle file input for photo upload\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile ? selectedFile.name : \"\");\n  };\n\n  // Upload photo to the server\n  const handleUploadPhoto = async () => {\n    if (!file) {\n      setResponseMessage({\n        type: \"error\",\n        text: \"Please select a photo file to upload.\"\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"photo\", file);\n    formData.append(\"user_id\", userId);\n    try {\n      setResponseMessage({\n        text: \"Uploading Photo.....\"\n      });\n      const response = await fetch(\"https://upload-photos-74952627446.us-central1.run.app/photos/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Photo uploaded successfully:\", data);\n        setResponseMessage({\n          type: \"success\",\n          text: \"Photo uploaded successfully!\"\n        });\n        setFile(null); // Clear file input after upload\n        setFileName(\"\");\n\n        // Delay before reloading\n        await sleep(2000); // 2-second delay\n        window.location.reload();\n      } else {\n        console.error(\"Cannot upload photo, daily bandwidth or storage will exceed.\", data.message);\n        setResponseMessage({\n          type: \"error\",\n          text: \"Cannot upload photo, daily bandwidth or storage will exceed..\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Error uploading photo:\", error);\n      setResponseMessage({\n        type: \"error\",\n        text: \"Error uploading photo.\"\n      });\n    }\n  };\n\n  // Handle photo deletion\n  const handleDeletePhoto = async photoName => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this photo?\");\n    if (!confirmDelete) return;\n    try {\n      console.log(\"userid\", userId);\n      const response = await fetch(`https://delete-photos-74952627446.us-central1.run.app/photos/delete/${photoName}?user_id=${userId}`, {\n        method: \"DELETE\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Photo deleted successfully:\", data);\n        setResponseMessage({\n          type: \"success\",\n          text: \"Photo deleted successfully!\"\n        });\n      } else {\n        console.error(\"Error deleting photo at else:\", data.message);\n        setResponseMessage({\n          type: \"error\",\n          text: \"Error deleting photo.\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Error deleting photo at catch:\", error);\n      setResponseMessage({\n        type: \"error\",\n        text: \"Error deleting photo.\"\n      });\n    }\n    await sleep(2000); // 2-second delay\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navigate-button\",\n      onClick: () => navigate(\"/dashboard\"),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Photo Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `response-message ${responseMessage.type}`,\n      children: responseMessage.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"photo-upload\",\n        className: \"custom-file-label\",\n        children: \"Choose a photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"photo-upload\",\n        accept: \".jpg, .jpeg, .png, .gif\" // Accept only specific photo extensions\n        ,\n        onChange: handleFileChange,\n        style: {\n          display: \"none\"\n        } // Hide the default input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadPhoto,\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Photo: \", fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-grid\",\n      children: photos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No photos available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this) : photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${photo[1]}` // Display image from base64 data\n          ,\n          alt: photo.photo_name || `Photo ${index}`,\n          className: \"photo-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-name\",\n          children: photo[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-photo-button\",\n          onClick: () => handleDeletePhoto(photo[0]),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)]\n      }, `${photo[0]}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Photos, \"1t4tZR826bMnInNagcYyqrDrlqc=\", false, function () {\n  return [useNavigate];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Photos","_s","photos","setPhotos","file","setFile","fileName","setFileName","responseMessage","setResponseMessage","sleep","ms","Promise","resolve","setTimeout","navigate","userId","localStorage","getItem","fetchPhotos","response","fetch","data","json","console","log","ok","error","message","type","text","handleFileChange","e","selectedFile","target","files","name","handleUploadPhoto","formData","FormData","append","method","body","window","location","reload","handleDeletePhoto","photoName","confirmDelete","confirm","className","children","onClick","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","onChange","style","display","length","map","photo","index","src","alt","photo_name","_c","$RefreshReg$"],"sources":["C:/SEMESTER 6/Project/Cloud/frontend/src/components/photos.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./../styles/photos.css\"; // Import the CSS file\r\n\r\nconst Photos = () => {\r\n  const [photos, setPhotos] = useState([]); // Store all photo details\r\n  const [file, setFile] = useState(null); // Store file for photo upload\r\n  const [fileName, setFileName] = useState(\"\"); // Store the name of the selected file\r\n  const [responseMessage, setResponseMessage] = useState(null); // Store response messages for UI\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  const navigate = useNavigate(); // For navigation\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  // Fetch all photos (names and details) on component mount\r\n  useEffect(() => {\r\n    const fetchPhotos = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://get-photos-74952627446.us-central1.run.app/photos/${userId}`,\r\n        );\r\n        const data = await response.json();\r\n        console.log(\"Data: \", data);\r\n\r\n        if (response.ok) {\r\n          setPhotos(data.photos || []); // Save all photo details in state\r\n        } else {\r\n          console.error(\"Error fetching photos:\", data.message);\r\n          setResponseMessage({ type: \"error\", text: \"No photos available.\" });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching photos:\", error);\r\n        setResponseMessage({ type: \"error\", text: \"Error fetching photos.\" });\r\n      }\r\n    };\r\n    fetchPhotos();\r\n  }, []);\r\n\r\n  // Handle file input for photo upload\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n    setFileName(selectedFile ? selectedFile.name : \"\");\r\n  };\r\n\r\n  // Upload photo to the server\r\n  const handleUploadPhoto = async () => {\r\n    if (!file) {\r\n      setResponseMessage({\r\n        type: \"error\",\r\n        text: \"Please select a photo file to upload.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"photo\", file);\r\n    formData.append(\"user_id\", userId);\r\n\r\n    try {\r\n      setResponseMessage({\r\n        text: \"Uploading Photo.....\",\r\n      });\r\n      const response = await fetch(\r\n        \"https://upload-photos-74952627446.us-central1.run.app/photos/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        },\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log(\"Photo uploaded successfully:\", data);\r\n        setResponseMessage({\r\n          type: \"success\",\r\n          text: \"Photo uploaded successfully!\",\r\n        });\r\n        setFile(null); // Clear file input after upload\r\n        setFileName(\"\");\r\n\r\n        // Delay before reloading\r\n        await sleep(2000); // 2-second delay\r\n        window.location.reload();\r\n      } else {\r\n        console.error(\r\n          \"Cannot upload photo, daily bandwidth or storage will exceed.\",\r\n          data.message,\r\n        );\r\n        setResponseMessage({ type: \"error\", text: \"Cannot upload photo, daily bandwidth or storage will exceed..\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading photo:\", error);\r\n      setResponseMessage({ type: \"error\", text: \"Error uploading photo.\" });\r\n    }\r\n  };\r\n\r\n  // Handle photo deletion\r\n  const handleDeletePhoto = async (photoName) => {\r\n    const confirmDelete = window.confirm(\r\n      \"Are you sure you want to delete this photo?\",\r\n    );\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      console.log(\"userid\", userId);\r\n      const response = await fetch(\r\n        `https://delete-photos-74952627446.us-central1.run.app/photos/delete/${photoName}?user_id=${userId}`,\r\n        {\r\n          method: \"DELETE\",\r\n        },\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log(\"Photo deleted successfully:\", data);\r\n        setResponseMessage({\r\n          type: \"success\",\r\n          text: \"Photo deleted successfully!\",\r\n        });\r\n      } else {\r\n        console.error(\"Error deleting photo at else:\", data.message);\r\n        setResponseMessage({ type: \"error\", text: \"Error deleting photo.\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting photo at catch:\", error);\r\n      setResponseMessage({ type: \"error\", text: \"Error deleting photo.\" });\r\n    }\r\n    await sleep(2000); // 2-second delay\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"photos-container\">\r\n      <button className=\"navigate-button\" onClick={() => navigate(\"/dashboard\")}>Back</button>\r\n      <h2>Photo Gallery</h2>\r\n\r\n      {/* Display Response Message */}\r\n      {responseMessage && (\r\n        <div className={`response-message ${responseMessage.type}`}>\r\n          {responseMessage.text}\r\n        </div>\r\n      )}\r\n\r\n      {/* Photo Upload Section */}\r\n      <div className=\"upload-section\">\r\n        <h3>Upload Photo</h3>\r\n        <label htmlFor=\"photo-upload\" className=\"custom-file-label\">\r\n          Choose a photo\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"photo-upload\"\r\n          accept=\".jpg, .jpeg, .png, .gif\" // Accept only specific photo extensions\r\n          onChange={handleFileChange}\r\n          style={{ display: \"none\" }} // Hide the default input\r\n        />\r\n        <button onClick={handleUploadPhoto}>Upload Photo</button>\r\n        {fileName && <p>Selected Photo: {fileName}</p>}\r\n      </div>\r\n\r\n      {/* Display all photos */}\r\n      <div className=\"photo-grid\">\r\n        {photos.length === 0 ? (\r\n          <p>No photos available.</p>\r\n        ) : (\r\n          photos.map((photo, index) => (\r\n            <div key={`${photo[0]}-${index}`} className=\"photo-item\">\r\n              <img\r\n                src={`${photo[1]}`} // Display image from base64 data\r\n                alt={photo.photo_name || `Photo ${index}`}\r\n                className=\"photo-preview\"\r\n              />\r\n              <div className=\"photo-name\">{photo[2]}</div>\r\n              <button\r\n                className=\"delete-photo-button\"\r\n                onClick={() => handleDeletePhoto(photo[0])}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}